apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  labels:
    app: api-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-deployment
  template:
    metadata:
      labels:
        app: api-deployment
    spec:
      containers:
        - name: api-deployment
          image: gcr.io/PROJECT_ID/IMAGE:TAG
          ports:
            - containerPort: 80

        - name: redis
          image: redislabs/redismod
          ports:
            - containerPort: 6379

        - image: bitnami/mongodb
          name: mongo
          args: [ "--dbpath","/data/db" ]
          livenessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          env:
            - name: MONGODB_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database
                  name: mongo-creds
            - name: MONGODB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-creds
                  key: username
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-creds
                  key: password
          volumeMounts:
            - name: "mongo-data-dir"
              mountPath: "/bitnami"
      volumes:
        - name: "mongo-data-dir"
          persistentVolumeClaim:
            claimName: "pvc"

