// Code generated by MockGen. DO NOT EDIT.
// Source: internal/core/ports/user/passwordValidatorPorts.go

// Package mock_ports is a generated GoMock package.
package mock_ports

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPasswordValidatorRepository is a mock of PasswordValidatorRepository interface.
type MockPasswordValidatorRepository struct {
	ctrl     *gomock.Controller
	recorder *MockPasswordValidatorRepositoryMockRecorder
}

// MockPasswordValidatorRepositoryMockRecorder is the mock recorder for MockPasswordValidatorRepository.
type MockPasswordValidatorRepositoryMockRecorder struct {
	mock *MockPasswordValidatorRepository
}

// NewMockPasswordValidatorRepository creates a new mock instance.
func NewMockPasswordValidatorRepository(ctrl *gomock.Controller) *MockPasswordValidatorRepository {
	mock := &MockPasswordValidatorRepository{ctrl: ctrl}
	mock.recorder = &MockPasswordValidatorRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPasswordValidatorRepository) EXPECT() *MockPasswordValidatorRepositoryMockRecorder {
	return m.recorder
}

// VerifyPasswordStrenght mocks base method.
func (m *MockPasswordValidatorRepository) VerifyPasswordStrenght(plainPassword string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyPasswordStrenght", plainPassword)
	ret0, _ := ret[0].(error)
	return ret0
}

// VerifyPasswordStrenght indicates an expected call of VerifyPasswordStrenght.
func (mr *MockPasswordValidatorRepositoryMockRecorder) VerifyPasswordStrenght(plainPassword interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyPasswordStrenght", reflect.TypeOf((*MockPasswordValidatorRepository)(nil).VerifyPasswordStrenght), plainPassword)
}
